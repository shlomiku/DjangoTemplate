sudo: true
env:
  CONTINIOUS_INTEGRATION: true
before_install:
  - sudo apt-get update -qq
  - sudo apt-get install -qq build-essential gettext python-dev zlib1g-dev libpq-dev xvfb
  - sudo apt-get install -qq libtiff4-dev libjpeg8-dev libfreetype6-dev liblcms1-dev libwebp-dev
  - sudo apt-get install -qq graphviz-dev python-setuptools python3-dev python-virtualenv python-pip
  - sudo apt-get install -qq firefox automake libtool libreadline6 libreadline6-dev libreadline-dev
  - sudo apt-get install -qq libsqlite3-dev libxml2 libxml2-dev libssl-dev libbz2-dev wget curl llvm
language: python
python:
  - "2.7"
#services:
#  - docker
#before_install:
#  - chmod +x ./utility/install_python_dependencies.sh
##  - sudo rm /usr/local/bin/docker-compose
#  - sudo mv /var/lib/apt/lists /var/lib/apt/lists.old
#  - sudo mkdir -p /var/lib/apt/lists/partial
#  - sudo apt-get update
#  - sudo apt-get update
#  - sudo apt-get install -y docker-engine # 1.11.2-0~trusty
#  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
#  - chmod +x docker-compose
#  - sudo mv docker-compose /usr/local/bin
#  - sudo apt-get remove --purge -y docker-engine

build:
  pre_ci:
    - sudo pip install -U pip
    - docker --version
#    - sudo echo "deb https://packages.docker.com/1.10/apt/repo ubuntu-trusty main" | sudo tee /etc/apt/sources.list.d/docker.list
#    - sudo apt-get update
#    - sudo apt-get upgrade docker-engine
#    - docker --version
    - sudo pip install -U docker-compose
#    - sudo pip install -U docker-compose==1.5.2
#    - sudo pip install -U docker-engine
    - docker-compose -f test.yml build
    - docker-compose -f test.yml up -d
    - docker exec `docker ps |grep postgres|awk '{print $1}'` apt-get update
    - docker exec `docker ps |grep postgres|awk '{print $1}'` apt-get install -y net-tools
    - docker ps
    - docker run --net="djangotemplate_default" djangotemplate_pycharm python manage.py makemigrations
    - docker run --net="djangotemplate_default" djangotemplate_pycharm python manage.py migrate
#    - mkdir -p ~/shippable/testresults
  ci:
    - docker run --net="djangotemplate_default" djangotemplate_pycharm python manage.py test --keepdb
    - cat /opt/project/shippable/testresults/nosetests.xml
  post_ci:
    - cat /opt/project/shippable/testresults/nosetests.xml
  after_success:
    - cat /opt/project/shippable/testresults/nosetests.xml
  after_failure:
    - cat /opt/project/shippable/testresults/nosetests.xml
#install:
#  - ./utility/install_python_dependencies.sh
#  - sudo ps -aux |grep post
#  - sudo netstat -an |grep LIST
#  - sudo netstat -tulpn
#  - sudo kill `ps -eo pid,command | grep postgres | grep -v grep | awk '{print $1}'`
#  - sudo netstat -tulpn
#  - docker-compose -f test.yml build
#  - docker-compose -f test.yml up -d
#  - docker ps
#  - docker network ls
#  - docker network inspect djangotemplate_default
#  - docker exec `docker ps |grep postgres|awk '{print $1}'` apt-get update
#  - docker exec `docker ps |grep postgres|awk '{print $1}'` apt-get install -y net-tools
#  - docker exec `docker ps |grep postgres|awk '{print $1}'` netstat -an
#  - docker run --net="djangotemplate_default" djangotemplate_pycharm python manage.py makemigrations
#  - docker run --net="djangotemplate_default" djangotemplate_pycharm python manage.py migrate
#
#
#script:
#  - docker run --net="djangotemplate_default" djangotemplate_pycharm python manage.py test

