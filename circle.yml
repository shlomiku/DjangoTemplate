machine:
  environment:
    PROJECT_NAME: deliverance
    CLUSTER_NAME: deliver
  pre:
    - curl -sSL https://s3.amazonaws.com/circle-downloads/install-circleci-docker.sh | bash -s -- 1.10.0
  services:
    - docker

dependencies:
  pre:
     - docker --version
     - sudo pip install -U docker-compose
     - docker-compose --version
     - docker-compose -f test.yml build
     - docker-compose -f test.yml up -d
     - python deploy_scripts/fix_circleci_postgres_bug.py
#     - docker exec `docker ps |grep postgres|awk '{print $1}'` apt-get update
#     - docker exec `docker ps |grep postgres|awk '{print $1}'` apt-get install -y net-tools
#     - docker ps
     - docker run --net="djangotemplate_default" djangotemplate_pycharm python manage.py makemigrations
     - docker run --net="djangotemplate_default" djangotemplate_pycharm python manage.py migrate
     - mkdir -p $CIRCLE_TEST_REPORTS/django

test:
  override:
    - docker run --net="djangotemplate_default" djangotemplate_pycharm python manage.py test
  post:
    - python deploy_scripts/clear_old_s3_binaries.py
    - sudo cp `sudo find /var/lib/docker/btrfs/subvolumes/ -name nosetests.xml |grep /opt/project/nosetests.xml` $CIRCLE_TEST_REPORTS/django/
    - sudo cp `sudo find /var/lib/docker/btrfs/subvolumes/ -name coverage.xml |grep /opt/project/coverage.xml` $CIRCLE_TEST_REPORTS/django/
    - pip install codecov && codecov
    - bash <(curl -s https://codecov.io/bash)

deployment:
  staging:
    branch: master
    codedeploy:
      my_app_name:
        application_root: /
        revision_location:
          revision_type: S3
          s3_location:
            bucket: circleci-unique-bucket
            key_pattern: my_app_name-{SHORT_COMMIT}
        region: us-west-2
        deployment_group: my-group
        deployment_config: CodeDeployDefault.AllAtOnce
